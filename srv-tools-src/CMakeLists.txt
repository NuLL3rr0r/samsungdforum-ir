CMAKE_MINIMUM_REQUIRED ( VERSION 2.8 FATAL_ERROR )
PROJECT ( SRVTOOLS )

SET ( dep_DIR ${SRVTOOLS_SOURCE_DIR} )
SET ( CMAKE_INSTALL_PREFIX "/srv/.nginx/" )


SET ( CXX_FLAGS_WARN_LEVEL "-Wall -Wextra -Wno-unused-parameter" )
SET ( CXX_FLAGS_ISO_CPP "-pedantic" )
SET ( CXX_FLAGS_CPP11 "-std=c++0x" )
SET ( CXX_FLAGS_USE_PIPE "-pipe" )
SET ( CXX_FLAGS_OPT "-O2 -march=native -mtune=native" )
SET ( CXX_FLAGS_OMIT_FP "-fomit-frame-pointer" )
SET ( CXX_FLAGS_SIZE_OPT "-ffunction-sections -fdata-sections" )
SET ( CXX_FLAGS_THREADS "-pthread" )
SET ( LD_FLAGS_SIZE_OPT "-Wl,--gc-sections" )

SET ( CMAKE_CXX_FLAGS "${CXX_FLAGS_WARN_LEVEL} ${CXX_FLAGS_ISO_CPP} ${CXX_FLAGS_CPP11} ${CXX_FLAGS_USE_PIPE} ${CXX_FLAGS_OPT} ${CXX_FLAGS_OMIT_FP} ${CXX_FLAGS_SIZE_OPT} ${CXX_FLAGS_THREADS}" )
SET ( CMAKE_EXE_LINKER_FLAGS "${LD_FLAGS_SIZE_OPT}" )

FIND_PACKAGE ( dep )

IF ( DEP_FOUND )

    INCLUDE_DIRECTORIES ( ${Boost_INCLUDE_DIRS} )
    LINK_DIRECTORIES ( ${Boost_LIBRARY_DIRS} )
    
    LINK_DIRECTORIES ( ${KVM_LIBRARY} )

    INCLUDE ( _src.cmake )
    
    SET ( GEOUPDATER_BIN "geoupdater" )
    SET ( SPAWN_BIN "spawn" )

    ADD_EXECUTABLE ( ${GEOUPDATER_BIN} ${GEOUPDATER_SOURCE_FILES} )
    ADD_EXECUTABLE ( ${SPAWN_BIN} ${SPAWN_SOURCE_FILES} )

    TARGET_LINK_LIBRARIES ( ${SPAWN_BIN}
        ${Boost_LIBRARIES} ${KVM_LIBRARY}
    )

    ADD_CUSTOM_COMMAND ( TARGET ${GEOUPDATER_BIN}
        POST_BUILD
        COMMAND strip ${GEOUPDATER_BIN}
        COMMAND strip -R.comment ${GEOUPDATER_BIN}
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    )

    ADD_CUSTOM_COMMAND ( TARGET ${SPAWN_BIN}
        POST_BUILD
        COMMAND strip ${SPAWN_BIN}
        COMMAND strip -R.comment ${SPAWN_BIN}
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    )

    INSTALL ( FILES
        "${CMAKE_CURRENT_BINARY_DIR}/${GEOUPDATER_BIN}"
        "${CMAKE_CURRENT_BINARY_DIR}/${SPAWN_BIN}"
        DESTINATION "${CMAKE_INSTALL_PREFIX}"
        PERMISSIONS
        OWNER_READ OWNER_WRITE OWNER_EXECUTE
        GROUP_READ GROUP_EXECUTE
        WORLD_READ WORLD_EXECUTE
    )

ENDIF ( DEP_FOUND )


